{"mappings":"iUAEO,SAASA,IACd,IACE,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAGzC,CAFE,MAAOC,GACPC,SAASC,OAAOC,QAAQH,EAAII,QAC9B,CACF,CAEO,SAASC,IACd,IACE,OAAOT,KAAKC,MAAMC,aAAaC,QAAQ,SAGzC,CAFE,MAAOC,GACPC,SAASC,OAAOC,QAAQH,EAAII,QAC9B,CACF,C,iVCMA,IAAAE,EACAC,E,iJArBA,IAAIC,EAAU,CAAC,EAoBfF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,GAElC,EAaAL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,CACT,C,ICpBAE,EAAA,SAAAC,SAA8CtB,KAAKC,MAAM,2MCAzDoB,EAAA,SCEO,MAIME,EAAmBC,IAC9B,MAAMC,EAAmBD,EACtBE,KACC,EAACC,OACCA,EAAMC,YACNA,EAAWC,aACXA,EAAYC,eACZA,EAAcC,aACdA,EAAYb,GACZA,MAEA,IAAIc,EAAQL,EAAOM,KAAK,MAIxB,OAHIN,EAAOV,OAAS,IAClBe,EAAQL,EAAO,GAAK,KAAOA,EAAO,GAA1BA,WAEH,oKAKMC,0BACAE,mEAEQZ,yHAKOY,gDACIE,OAAWH,4DAI5C,IAGFI,KAAK,IAERC,EAAKC,QAAQC,mBAAmB,YAAaX,EAAA,E,MC5C/CY,EAAiB,IAAAC,IAAoBjB,EAAA,SAAAkB,QAA6C,SAAAC,OAAAC,KAAAC,KAAUC,WCIrF,MAAMT,EAAO,CAClBU,WAAYC,SAASC,cAAc,oBACnCC,SAAUF,SAASC,cAAc,kBACjCE,YAAaH,SAASC,cAAc,yBACpCX,QAASU,SAASC,cAAc,yBAChCG,QAASJ,SAASC,cAAc,uBAGjBD,SAASC,cAAc,QAC/BI,iBAAiB,SAE1B,SAAmBC,GACbA,EAAMC,OAAOC,UAAUC,SAAS,sBAClCC,IAEEJ,EAAMC,OAAOC,UAAUC,SAAS,oBAClCE,IAEF,MACF,IAEA,MAAMC,EAAkBC,IACR,OAAVA,GAAmC,IAAjBA,EAAMzC,OAC1BiB,EAAKC,QAAQwB,UAAY,kCAAkCC,EAAAvB,iCFxB7DH,EAAKC,QAAQwB,UAAY,GE2BvBD,EAAMhC,KAAImC,GAAMtC,EAAiB,CAACsC,MAClC3B,EAAKc,YAAYK,UAAUS,IAAI,aACjC,EAGIP,EAAmB,KACvB,IAAIQ,EAAUhE,IACdmC,EAAKa,SAASM,UAAUW,OAAO,sBAC/B9B,EAAKU,WAAWS,UAAUS,IAAI,sBAC9BL,EAAgBM,EAAA,EAGZP,EAAiB,KACrB,IAAIS,EAAQxD,IACZyB,EAAKa,SAASM,UAAUS,IAAI,sBAC5B5B,EAAKU,WAAWS,UAAUW,OAAO,sBACjCP,EAAgBQ,EAAA,EAKlBV,IAGArB,EAAKU,WAAWM,iBAAiB,QAASK,GAC1CrB,EAAKa,SAASG,iBAAiB,QAASM,G","sources":["src/js/get-data-from-localstorage.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-7e95dfae2b9919b3.js","src/library.js","src/js/render-cards.js","node_modules/@parcel/runtime-js/lib/runtime-285b9a87402b5cfc.js","src/js/my-library.js"],"sourcesContent":["// get database from localstorage and render\n\nexport function getWatchedFilms() {\n  try {\n    return JSON.parse(localStorage.getItem('watched'));\n  } catch (err) {\n    Notiflix.Notify.failure(err.message);\n  }\n}\n\nexport function getQueueFilms() {\n  try {\n    return JSON.parse(localStorage.getItem('queue'));\n  } catch (err) {\n    Notiflix.Notify.failure(err.message);\n  }\n}\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"1zJhX\\\":\\\"my_library.7be52877.js\\\",\\\"17Dzq\\\":\\\"movie.457cc533.png\\\",\\\"i5ecT\\\":\\\"my_library.cb7e985b.js\\\",\\\"lk5QZ\\\":\\\"my_library.b070715d.css\\\"}\"));","import './js/scroll';\n\nimport './js/my-library';\n\nimport './js/get-data-from-localstorage';\n\nimport './js/render-cards';\n\nimport './js/teamModal';\n\nimport './js/modal-window';\n","import { refs } from './my-library';\n\nexport const clearMarkup = () => {\n  refs.gallery.innerHTML = '';\n};\n\nexport const renderMoviesList = moviesArray => {\n  const markupMoviesList = moviesArray\n    .map(\n      ({\n        genres,\n        poster_path,\n        release_date,\n        original_title,\n        vote_average,\n        id,\n      }) => {\n        let genre = genres.join(', ');\n        if (genres.length > 2) {\n          genre = genres[0] + ', ' + genres[1] + ', ' + 'Other';\n        }\n        return `\n      <li class=\"film my-library-film\">\n        <a href=\"#\" class=\"film__link\">\n          <div class=\"film__body-img\">\n            <img\n              src=\"${poster_path}\"\n              alt=\"${original_title}\"\n              class=\"film__img\"\n              data-action=\"${id}\"\n            />\n          </div>\n\n          <div class=\"film__informations\">\n            <p class=\"film__name\">${original_title}</p>\n            <p class=\"film__detalies\">${genre} | ${release_date}</p>\n          </div>\n        </a>\n      </li>\n      `;\n      }\n    )\n    .join('');\n\n  refs.gallery.insertAdjacentHTML('beforeend', markupMoviesList);\n};\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"17Dzq\")).toString();","import { getWatchedFilms, getQueueFilms } from './get-data-from-localstorage';\nimport { renderMoviesList, clearMarkup } from './render-cards';\nimport nothingHereUrl from '../images/movie.png';\n// Refs\nexport const refs = {\n  btnWatched: document.querySelector('[name=\"watched\"]'),\n  btnQueue: document.querySelector('[name=\"queue\"]'),\n  defaultText: document.querySelector('[name=\"default-text\"]'),\n  gallery: document.querySelector('.my-library-film-card'),\n  buttonW: document.querySelector('.modal-watched-btn'),\n};\n\nconst btnModal = document.querySelector('body');\nbtnModal.addEventListener('click', selectBtn);\n\nfunction selectBtn(event) {\n  if (event.target.classList.contains('modal-watched-btn')) {\n    loadWatchedFilms();\n  }\n  if (event.target.classList.contains('modal-queue-btn')) {\n    loadQueueFilms();\n  }\n  return;\n}\n\nconst createMovieList = value => {\n  if (value === null || value.length === 0) {\n    refs.gallery.innerHTML = `<img style=\"width: 500px\" src=\"${nothingHereUrl}\" alt=\"There is nothing\" />`;\n  } else {\n    clearMarkup();\n    value.map(el => renderMoviesList([el]));\n    refs.defaultText.classList.add('is-hidden');\n  }\n};\n\nconst loadWatchedFilms = () => {\n  let watched = getWatchedFilms();\n  refs.btnQueue.classList.remove('btn-header__active');\n  refs.btnWatched.classList.add('btn-header__active');\n  createMovieList(watched);\n};\n\nconst loadQueueFilms = () => {\n  let queue = getQueueFilms();\n  refs.btnQueue.classList.add('btn-header__active');\n  refs.btnWatched.classList.remove('btn-header__active');\n  createMovieList(queue);\n};\n\n// Render wathed films after loading page\n\nloadWatchedFilms();\n\n// Event listener\nrefs.btnWatched.addEventListener('click', loadWatchedFilms);\nrefs.btnQueue.addEventListener('click', loadQueueFilms);\n"],"names":["$dd8f9d888c4b7706$export$c157f2a2227abe3b","JSON","parse","localStorage","getItem","err","Notiflix","Notify","failure","message","$dd8f9d888c4b7706$export$c2f4e899f5757252","$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","$13315e1086e5db7e$export$322a725b9435eb51","moviesArray","markupMoviesList","map","genres","poster_path","release_date","original_title","vote_average","genre","join","$085d2f9f3e302aeb$export$21666b427502ea6d","gallery","insertAdjacentHTML","$3ac74861c1b81d2a$exports","URL","resolve","import","meta","url","toString","btnWatched","document","querySelector","btnQueue","defaultText","buttonW","addEventListener","event","target","classList","contains","$085d2f9f3e302aeb$var$loadWatchedFilms","$085d2f9f3e302aeb$var$loadQueueFilms","$085d2f9f3e302aeb$var$createMovieList","value","innerHTML","$parcel$interopDefault","el","add","watched","remove","queue"],"version":3,"file":"my_library.7be52877.js.map"}