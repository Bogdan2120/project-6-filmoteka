{"mappings":"gfAAAA,EAAA,SCEO,MAAMC,EAAc,KACzBC,EAAKC,QAAQC,UAAY,IAGdC,EAAmBC,IAC9B,MAAMC,EAAmBD,EACtBE,KACC,EAACC,OAAEA,EAAMC,YAAEA,EAAWC,aAAEA,EAAYC,eAAEA,EAAcC,aAAEA,MACpD,IAAIC,EAAQL,EAAOM,KAAK,MAIxB,OAHIN,EAAOO,OAAS,IAClBF,EAAQL,EAAO,GAAK,KAAOA,EAAO,GAA1BA,WAEH,oKAKMC,0BACAE,0JAMeA,gDACIE,OAAWH,4DAI5C,IAGFI,KAAK,IAERb,EAAKC,QAAQc,mBAAmB,YAAaV,EAAA,EChCzB,IAAI,E,WAAAW,SAA1B,MAGahB,EAAO,CAClBiB,WAAYC,SAASC,cAAc,oBACnCC,SAAUF,SAASC,cAAc,kBACjCE,YAAaH,SAASC,cAAc,yBACpClB,QAASiB,SAASC,cAAc,yBAChCG,QAASJ,SAASC,cAAc,iBAIlC,IAAII,ECdG,WACL,IACE,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAGzC,CAFE,MAAOC,GACPC,SAASC,OAAOC,QAAQH,EAAII,QAC9B,CACF,CDQc,GACVC,ECPG,WACL,IACE,OAAOT,KAAKC,MAAMC,aAAaC,QAAQ,SAGzC,CAFE,MAAOC,GACPC,SAASC,OAAOC,QAAQH,EAAII,QAC9B,CACF,CDCY,GAEZ,MAAME,EAAmB,KACvBlC,EAAKoB,SAASe,UAAUC,OAAO,sBAC/BpC,EAAKiB,WAAWkB,UAAUE,IAAI,sBAEd,OAAZd,IAGFxB,IACAwB,EAAQjB,KAAIgC,GAAMnC,EAAiB,CAACmC,MACpCtC,EAAKqB,YAAYc,UAAUE,IAAI,aACjC,EAgBFH,IAEAlC,EAAKiB,WAAWsB,iBAAiB,QAASL,GAC1ClC,EAAKoB,SAASmB,iBAAiB,SAhBR,KACrBvC,EAAKoB,SAASe,UAAUE,IAAI,sBAC5BrC,EAAKiB,WAAWkB,UAAUC,OAAO,sBACnB,OAAVH,IAGFlC,IACAwB,EAAQjB,KAAIgC,GAAMnC,EAAiB,CAACmC,MACpCtC,EAAKqB,YAAYc,UAAUE,IAAI,aACjC,I","sources":["src/library.js","src/js/render-cards.js","src/js/my-library.js","src/js/get-data-from-localstorage.js"],"sourcesContent":["import './js/scroll';\n\nimport './js/my-library';\n\nimport './js/get-data-from-localstorage';\n\nimport './js/render-cards';\n\nimport './js/teamModal';\n","import { refs } from './my-library';\n\nexport const clearMarkup = () => {\n  refs.gallery.innerHTML = '';\n};\n\nexport const renderMoviesList = moviesArray => {\n  const markupMoviesList = moviesArray\n    .map(\n      ({ genres, poster_path, release_date, original_title, vote_average }) => {\n        let genre = genres.join(', ');\n        if (genres.length > 2) {\n          genre = genres[0] + ', ' + genres[1] + ', ' + 'Other';\n        }\n        return `\n      <li class=\"film my-library-film\">\n        <a href=\"#\" class=\"film__link\">\n          <div class=\"film__body-img\">\n            <img\n              src=\"${poster_path}\"\n              alt=\"${original_title}\"\n              class=\"film__img\"\n            />\n          </div>\n\n          <div class=\"film__informations\">\n            <p class=\"film__name\">${original_title}</p>\n            <p class=\"film__detalies\">${genre} | ${release_date}</p>\n          </div>\n        </a>\n      </li>\n      `;\n      }\n    )\n    .join('');\n\n  refs.gallery.insertAdjacentHTML('beforeend', markupMoviesList);\n};\n","import { getWatchedFilms, getQueueFilms } from './get-data-from-localstorage';\nimport { renderMoviesList, clearMarkup } from './render-cards';\nimport NewApiFetches from './apiFetches';\n\nconst newApiFetches = new NewApiFetches();\n\n// Refs\nexport const refs = {\n  btnWatched: document.querySelector('[name=\"watched\"]'),\n  btnQueue: document.querySelector('[name=\"queue\"]'),\n  defaultText: document.querySelector('[name=\"default-text\"]'),\n  gallery: document.querySelector('.my-library-film-card'),\n  loading: document.querySelector('.spinner-box'),\n};\n\n// render\nlet watched = getWatchedFilms();\nlet queue = getQueueFilms();\n\nconst loadWatchedFilms = () => {\n  refs.btnQueue.classList.remove('btn-header__active');\n  refs.btnWatched.classList.add('btn-header__active');\n\n  if (watched === null) {\n    return;\n  } else {\n    clearMarkup();\n    watched.map(el => renderMoviesList([el]));\n    refs.defaultText.classList.add('is-hidden');\n  }\n};\n\nconst loadQueueFilms = () => {\n  refs.btnQueue.classList.add('btn-header__active');\n  refs.btnWatched.classList.remove('btn-header__active');\n  if (queue === null) {\n    return;\n  } else {\n    clearMarkup();\n    watched.map(el => renderMoviesList([el]));\n    refs.defaultText.classList.add('is-hidden');\n  }\n};\n\n// Render wathed films after loading page\nloadWatchedFilms();\n// Event listener\nrefs.btnWatched.addEventListener('click', loadWatchedFilms);\nrefs.btnQueue.addEventListener('click', loadQueueFilms);\n","// get database from localstorage and render\n\nexport function getWatchedFilms() {\n  try {\n    return JSON.parse(localStorage.getItem('watched'));\n  } catch (err) {\n    Notiflix.Notify.failure(err.message);\n  }\n}\n\nexport function getQueueFilms() {\n  try {\n    return JSON.parse(localStorage.getItem('queue'));\n  } catch (err) {\n    Notiflix.Notify.failure(err.message);\n  }\n}\n"],"names":["parcelRequire","$48b9195af7100b32$export$d1927cf3bc385580","$bb2af86579234925$export$21666b427502ea6d","gallery","innerHTML","$48b9195af7100b32$export$322a725b9435eb51","moviesArray","markupMoviesList","map","genres","poster_path","release_date","original_title","vote_average","genre","join","length","insertAdjacentHTML","default","btnWatched","document","querySelector","btnQueue","defaultText","loading","$bb2af86579234925$var$watched","JSON","parse","localStorage","getItem","err","Notiflix","Notify","failure","message","$bb2af86579234925$var$queue","$bb2af86579234925$var$loadWatchedFilms","classList","remove","add","el","addEventListener"],"version":3,"file":"my_library.f848ad10.js.map"}